name: Build

on:
  push:
    branches: [ main,
                # TODO:
                feature/eirikb/build,
    ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-x64
          - target: x86_64-apple-darwin
            os: macos-13
            name: macos-x64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: macos-arm64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: windows-x64
            ext: .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create artifact directory
        run: mkdir -p artifacts

      - name: Copy binary (Unix)
        if: "!contains(matrix.os, 'windows')"
        run: |
          cp target/${{ matrix.target }}/release/git artifacts/git-${{ matrix.name }}
          chmod +x artifacts/git-${{ matrix.name }}

      - name: Copy binary (Windows)
        if: contains(matrix.os, 'windows')
        run: |
          copy target/${{ matrix.target }}/release/git${{ matrix.ext }} artifacts/git-${{ matrix.name }}${{ matrix.ext }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: git-${{ matrix.name }}
          path: artifacts/git-${{ matrix.name }}${{ matrix.ext }}
          retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create checksums
        run: |
          cd artifacts
          find . -name "git-*" -type f -exec sha256sum {} \; > checksums.txt
          cat checksums.txt

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/*/git-*
            artifacts/checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}